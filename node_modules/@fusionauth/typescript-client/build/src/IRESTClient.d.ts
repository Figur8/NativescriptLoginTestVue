import ClientResponse from "./ClientResponse";
export default interface IRESTClient {
    /**
     * Sets the authorization header using a key
     *
     * @param {string} key The value of the authorization header.
     * @returns {IRESTClient}
     */
    withAuthorization(key: any): IRESTClient;
    /**
     * Adds a segment to the request uri
     */
    withUriSegment(segment: any): IRESTClient;
    /**
     * Adds a header to the request.
     *
     * @param key The name of the header.
     * @param value The value of the header.
     */
    withHeader(key: string, value: string): IRESTClient;
    /**
     * Sets the body of the client request.
     *
     * @param body The object to be written to the request body as JSON.
     */
    withJSONBody(body: object): IRESTClient;
    /**
     * Sets the http method for the request
     */
    withMethod(method: any): IRESTClient;
    /**
     * Sets the uri of the request
     */
    withUri(uri: any): IRESTClient;
    /**
     * Adds parameters to the request.
     *
     * @param name The name of the parameter.
     * @param value The value of the parameter, may be a string, object or number.
     */
    withParameter(name: any, value: any): IRESTClient;
    /**
     * Run the request and return a promise. This promise will resolve if the request is successful
     * and reject otherwise.
     */
    go<T>(): Promise<ClientResponse<T>>;
}
